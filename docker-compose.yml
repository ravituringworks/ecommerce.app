version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Containerfile
    container_name: ecommerce-backend
    environment:
      SECRET_KEY: ${SECRET_KEY:-change-me-in-prod}
      # Persist SQLite DB under /data inside the container
      DATABASE_URL: ${DATABASE_URL:-sqlite:////data/ecommerce.db}
      # Default to mock payments unless Stripe keys are provided
      PAYMENT_MODE: ${PAYMENT_MODE:-mock}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY:-}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET:-}
    volumes:
      - backend_data:/data
    ports:
      - "8000:8000"
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Containerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8000}
        NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY:-pk_test_your_stripe_publishable_key_here}
        NEXT_PUBLIC_PAYMENT_MODE: ${NEXT_PUBLIC_PAYMENT_MODE:-mock}
    container_name: ecommerce-frontend
    environment:
      # Also present at runtime for any server-side reads
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8000}
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY:-pk_test_your_stripe_publishable_key_here}
      NEXT_PUBLIC_PAYMENT_MODE: ${NEXT_PUBLIC_PAYMENT_MODE:-mock}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  backend_data:
